name: CI

on: [push, pull_request]

jobs:

  test:

    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python {% raw %}${{ matrix.python-version }}{% endraw %}
        uses: actions/setup-python@v2
        with:
          python-version: {% raw %}${{ matrix.python-version }}{% endraw %}

      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install poetry
          python3 -m pip install nox

      - name: Run Tests and Coverage
        run: {% raw %}nox --non-interactive --session "test-${{ matrix.python-version }}"{% endraw %}

  lint:

    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install poetry
          python3 -m pip install nox

      - name: Lint
        run: nox --non-interactive --session "lint"

  docs:

    name: Docs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install poetry
          python3 -m pip install nox

      - name: Build Docs
        run: nox --non-interactive --session "docs"

  publish-docs:

    name: Publish Docs
    runs-on: ubuntu-latest

    needs: docs

    # Only publish docs automatically on new release
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install poetry
          poetry install

      - name: Deploy Docs to GitHub Pages
        env:
          # Use the built in CI GITHUB_TOKEN
          GITHUB_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
        run: |
          git remote add gh-token "https://${GITHUB_TOKEN}@github.com/{{cookiecutter.author_github_username}}/{{cookiecutter.project_slug}}.git";
          git fetch gh-token && git fetch gh-token gh-pages:gh-pages;
          poetry run mkdocs gh-deploy -v --clean --remote-name gh-token;

  release:
  
    name: Release
    runs-on: ubuntu-latest

    needs: [test, lint, docs, publish-docs]

    # Only release on new tag
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Dependencies
        # Uses pypa build https://pypa-build.readthedocs.io/en/latest/
        # For full PEP517/518 compliance
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          python3 -m pip install poetry

      - name: Build sdist and wheel
        run: poetry build
        
      - name: Publish Distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: {% raw %}${{ secrets.PYPI_API_TOKEN }}{% endraw %}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
          GITHUB_REPOSITORY: {% raw %}${{ github.repository }}{% endraw %}
        with:
          draft: false
          prerelease: false
          files: |
            dist/*

      - name: Publish Release Notes
        uses: release-drafter/release-drafter@v5.15.0
        env:
          GITHUB_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
